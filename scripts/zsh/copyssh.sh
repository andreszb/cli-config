#!/usr/bin/env zsh

copyssh() {
  # Handle --help option
  if [[ "$1" == "--help" || "$1" == "-h" ]]; then
    echo "copyssh - Generate SSH key and configure GitHub authentication"
    echo ""
    echo "DESCRIPTION:"
    echo "  Automates the complete SSH key setup process for GitHub, including:"
    echo "  ‚Ä¢ Generates Ed25519 SSH key if it doesn't exist"
    echo "  ‚Ä¢ Starts SSH agent and adds the key"
    echo "  ‚Ä¢ Copies public key to clipboard"
    echo "  ‚Ä¢ Configures commit signing with SSH"
    echo "  ‚Ä¢ Provides step-by-step GitHub setup instructions"
    echo ""
    echo "USAGE:"
    echo "  copyssh           # Run the SSH setup process"
    echo "  copyssh --help    # Show this help message"
    echo ""
    echo "REQUIREMENTS:"
    echo "  ‚Ä¢ ssh-keygen (for key generation)"
    echo "  ‚Ä¢ ssh-agent (for key management)"
    echo "  ‚Ä¢ pbcopy (macOS) or xclip (Linux) for clipboard access"
    echo "  ‚Ä¢ git (for commit signing configuration)"
    echo ""
    echo "FILES CREATED:"
    echo "  ~/.ssh/id_ed25519         # Private SSH key"
    echo "  ~/.ssh/id_ed25519.pub     # Public SSH key"
    echo "  ~/.ssh/allowed_signers    # Git commit signing configuration"
    echo ""
    echo "NEXT STEPS:"
    echo "  After running copyssh, visit https://github.com/settings/keys"
    echo "  to add your SSH key to GitHub."
    return 0
  fi

  local email="$(git config --global user.email)"
  local ssh_key_path="$HOME/.ssh/id_ed25519"
  local pub_key_path="$ssh_key_path.pub"
  
  # Validate email is set
  if [[ -z "$email" ]]; then
    echo "‚ùå Error: No email configured in git. Please run:"
    echo "   git config --global user.email \"your-email@example.com\""
    return 1
  fi
  
  echo "üîê Setting up SSH key for GitHub..."
  echo "üìß Using email: $email"
  echo ""
  
  # Ensure .ssh directory exists
  mkdir -p "$HOME/.ssh"
  chmod 700 "$HOME/.ssh"
  
  # Step 1: Generate SSH key if it doesn't exist
  if [[ ! -f "$ssh_key_path" ]]; then
    echo "1Ô∏è‚É£  Generating SSH key..."
    ssh-keygen -t ed25519 -C "$email" -f "$ssh_key_path" -N ""
    echo "‚úÖ SSH key generated"
  else
    echo "1Ô∏è‚É£  SSH key already exists at $ssh_key_path"
  fi
  
  # Step 2: Start SSH agent
  echo "2Ô∏è‚É£  Starting SSH agent..."
  eval "$(ssh-agent -s)"
  
  # Step 3: Add key to agent
  echo "3Ô∏è‚É£  Adding key to SSH agent..."
  ssh-add "$ssh_key_path"
  if [[ $? -eq 0 ]]; then
    echo "‚úÖ Key added to SSH agent"
    echo "üìã Keys in agent:"
    ssh-add -l
  else
    echo "‚ùå Failed to add key to SSH agent"
    return 1
  fi
  echo ""
  
  # Step 4: Copy public key to clipboard
  echo "4Ô∏è‚É£  Copying public key to clipboard..."
  if [[ ! -f "$pub_key_path" ]]; then
    echo "‚ùå Error: Public key not found at $pub_key_path"
    return 1
  fi
  
  if command -v pbcopy >/dev/null 2>&1; then
    cat "$pub_key_path" | pbcopy
    echo "‚úÖ Public key copied to clipboard (macOS)"
  elif command -v xclip >/dev/null 2>&1; then
    cat "$pub_key_path" | xclip -selection clipboard
    echo "‚úÖ Public key copied to clipboard (Linux)"
  elif command -v wl-copy >/dev/null 2>&1; then
    cat "$pub_key_path" | wl-copy
    echo "‚úÖ Public key copied to clipboard (Wayland)"
  else
    echo "‚ö†Ô∏è  No clipboard utility found. Here's your public key:"
    echo "üìÑ Public key content:"
    cat "$pub_key_path"
  fi
  echo ""
  
  # Step 5: Create allowed_signers file for commit verification
  echo "5Ô∏è‚É£  Setting up commit signing..."
  echo "$email $(cat "$pub_key_path")" > ~/.ssh/allowed_signers
  chmod 644 ~/.ssh/allowed_signers
  git config --global gpg.ssh.allowedSignersFile ~/.ssh/allowed_signers
  echo "‚úÖ Commit signing configured"
  echo ""
  
  # Instructions
  echo "üéØ Next steps:"
  echo "   1. Visit: https://github.com/settings/keys"
  echo "   2. Click 'New SSH key'"
  echo "   3. Paste the key from clipboard"
  echo "   4. Set key type to 'Authentication Key' and optionally 'Signing Key'"
  echo "   5. Test connection: ssh -T git@github.com"
  echo ""
  echo "üîç Troubleshooting:"
  echo "   ‚Ä¢ View public key: cat \"$pub_key_path\""
  echo "   ‚Ä¢ Test GitHub connection: ssh -T git@github.com"
  echo "   ‚Ä¢ Check SSH agent: ssh-add -l"
}